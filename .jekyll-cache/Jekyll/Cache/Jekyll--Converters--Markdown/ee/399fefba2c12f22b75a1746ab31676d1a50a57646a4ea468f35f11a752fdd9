I"<h2 id="1차-데모데이">1차 데모데이</h2>
<h3 id="git-브랜치-전략">Git 브랜치 전략</h3>

<div style="width:60% !important; margin:0 auto">
<img src="/assets/img/studylog_lv3-1-1.png" alt="studylog_lv3-1.png" />
</div>

<div style="width:70% !important; margin:0 auto">
<img src="/assets/img/studylog_lv3-1-2.png" alt="studylog_lv3-2.png" />
</div>

<ul>
  <li>프로젝트 특성상 아직 배포단위가 명확하게 구분되지 않는다고 판단해 Git flow가 아닌 Github flow를 참고하여 브랜치전략을 세움</li>
  <li>main 브랜치는 배포용으로 사용하고 dev 브랜치를 개발용으로 사용</li>
  <li>dev 브랜치에서 기능단위로 <code class="language-plaintext highlighter-rouge">feat/이슈넘버-기능명</code> 브랜치를 나누어 기능구현 후 dev에 머지</li>
  <li>dev에 머지된 코드 중 버그 발견 시 <code class="language-plaintext highlighter-rouge">hotfix/이슈번호-기능명</code> 브랜치를 만들어 버그수정 후 dev에 머지</li>
  <li><a href="https://ujuc.github.io/2015/12/16/git-flow-github-flow-gitlab-flow/">참고링크1</a></li>
  <li><a href="https://codingtrainee.tistory.com/156">참고링크2</a></li>
  <li><a href="https://xrabcde.github.io/git-branch/">블로그 정리</a></li>
</ul>

<h3 id="일정산출">일정산출</h3>
<ul>
  <li>전체 일정을 스프린트 3개로 나누어 일정을 관리함</li>
  <li>전체 기능의 우선순위를 매겨 먼저 구현되어야 하는 기능들을 앞 스프린트에서 진행함</li>
  <li>일정관리를 위해 Github projects와 issues, milestones 그리고 Notion을 활용함</li>
</ul>

<h3 id="branch-protection-rules">Branch protection rules</h3>
<ul>
  <li>PR과 Issue의 형식을 통일하기 위해 템플릿을 만듦
    <ul>
      <li>/.github/ 폴더 내에 <strong>PULL_REQUEST_TEMPLATE.md</strong> 파일 생성</li>
    </ul>

    <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>## 구현 기능
- 구현한 기능을 적습니다.
  
## 논의하고 싶은 내용
- 논의할 내용을 적습니다.
  
## 공유하고 싶은 내용
- 학습한 내용, 공유할 내용 등을 적습니다.
- 위키에 작성했다면 링크 첨부, 없는 경우 삭제
  
## 기타
- 기타 추가할 내용이 있다면 추가합니다.
- 없는 경우 삭제
  
Close #이슈번호
</code></pre></div>    </div>

    <ul>
      <li>/.github/ 폴더 내에 <strong>ISSUE_TEMPLATE.md</strong> 파일 생성</li>
    </ul>

    <div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>---
name: Bug template
about: 버그 발생 시 사용하는 템플릿입니다
title: "[ALL/FE/BE] "
labels: "\U0001F41B bug"
assignees: ''
---
  
## 버그 기능
- 페이지나 기능을 적습니다.
  
### 버그 상황 재연
- 어떤 상황에서 버그가 발생하는지 적습니다.
  
### 기대 동작
- 원래 기대하던 정상 동작에 대해 작성합니다.
  
### 현재 동작
- 기대하던 동작에 반해 지금 문제가 되는 동작을 작성합니다.
</code></pre></div>    </div>
  </li>
  <li>PR 어프루브 룰
    <ul>
      <li>팀원 최소 2인의 어프루브가 있어야 merge 가능하도록 설정</li>
    </ul>

    <div style="width:60% !important; margin:0 auto">
<img src="/assets/img/studylog_lv3-1-3.png" alt="studylog_lv3-3.png" />
</div>
  </li>
  <li>커밋 메시지 컨벤션
    <ul>
      <li>feat, fix, refactor, docs, style, chore, test</li>
    </ul>

    <ol>
      <li>메시지는 한글로 작성한다.</li>
      <li>상세 내용은 목록으로 기재한다.(선택사항)</li>
      <li>메시지는 수정, 구현으로 되도록 끝내고, 음슴체까지 허용한다.</li>
    </ol>
  </li>
</ul>

<h3 id="api-설계">API 설계</h3>
<ul>
  <li>프론트엔드와 회의를 통해 통일된 요청, 응답 형식을 정의함</li>
  <li>URI는 가능한 RESTful하도록 계층관계에 주의해 설계함</li>
  <li>다양한 예외상황에 대해 응답코드를 정리함</li>
</ul>
:ET